<Application x:Class="LyPlan.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:LyPlan"
             xmlns:bo ="clr-namespace:BussinessObject.Entities;assembly=BussinessObject"
             StartupUri="MainWindow.xaml">
    <Application.Resources>

        <!--Grid-->

        <Style TargetType="Grid" x:Key="background-light">
            <Setter Property="Background" Value="#ffffffff"></Setter>
        </Style>
        <Style TargetType="Grid" x:Key="background-light-transparent">
            <Setter Property="Background" Value="#ccffffff"></Setter>
        </Style>
        <Style TargetType="Grid" x:Key="background-dark">
            <Setter Property="Background" Value="#FF1A1A1A"></Setter>
        </Style>
        <Style TargetType="Grid" x:Key="background-dark-transparent">
            <Setter Property="Background" Value="#aa000000"></Setter>
        </Style>
        <Style TargetType="Grid" x:Key="background-day-in-week" BasedOn="{StaticResource background-light}">
            <Setter Property="Margin" Value="5"></Setter>
        </Style>
        <Style TargetType="Grid" x:Key="background-image">
            <Setter Property="Background">
                <Setter.Value>
                    <ImageBrush ImageSource="resource/ori.jpg" Stretch="UniformToFill"/>
                </Setter.Value>
            </Setter>
            <Setter Property="Effect">
                <Setter.Value>
                    <BlurEffect Radius="10"></BlurEffect>
                </Setter.Value>
            </Setter>
        </Style>

        <!--Content Control-->
        <Style TargetType="{x:Type ContentControl}" x:Key="content-day-in-week">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ContentControl}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="48"></RowDefinition>
                                <RowDefinition Height="1"></RowDefinition>
                                <RowDefinition Height="1*"></RowDefinition>
                                <RowDefinition Height="1"></RowDefinition>
                                <RowDefinition Height="1*"></RowDefinition>
                            </Grid.RowDefinitions>
                            <Grid Grid.Row="0">
                                <TextBlock Text="{Binding DayName}" Foreground="#FF00A2DE" HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="16"></TextBlock>
                            </Grid>
                            <Grid Grid.Row="1">
                                <Border BorderBrush="#FF0066AA" BorderThickness="0,0,0,1" Margin="15,0">
                                </Border>
                            </Grid>
                            <Grid Grid.Row="2">
                                <ListView ItemsSource="{Binding MorningTask}" BorderBrush="{x:Null}"
                                          Style="{DynamicResource listview-day-in-week}">
                                   
                                </ListView>
                            </Grid>
                            <Grid Grid.Row="3">
                                <Border BorderBrush="#FF0066AA" BorderThickness="0,0,0,1" Margin="15,0">
                                </Border>
                            </Grid>
                            <Grid Grid.Row="4">
                                <ListView ItemsSource="{Binding NightTask}" BorderBrush="{x:Null}"
                                          Style="{DynamicResource listview-day-in-week}"></ListView>
                            </Grid>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="ListView" x:Key="listview-day-in-week">
            <Setter Property="ItemTemplate">
                <Setter.Value>
                    <DataTemplate DataType="{x:Type bo:WeekyWork}">
                        <Grid>
                            <TextBlock Text="{Binding Title}"/>
                        </Grid>
                    </DataTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="ListView" x:Key="listview-task">
            <Setter Property="MinHeight" Value="24"></Setter>
            <Setter Property="Background" Value="#ff333333"></Setter>
            <Setter Property="BorderBrush" Value="#ff00A2DE"></Setter>
            <Setter Property="BorderThickness" Value="0,0,5,0"></Setter>
            <Setter Property="Foreground" Value="#ffffffff"></Setter>
            <Setter Property="HorizontalContentAlignment" Value="Left"></Setter>
            <Setter Property="VerticalContentAlignment" Value="Center"></Setter>
            <Setter Property="Margin" Value="5,5,5,5"></Setter>
            <Setter Property="ItemTemplate">
                <Setter.Value>
                    <DataTemplate DataType="{x:Type bo:Task}">
                        <Grid>
                            <TextBlock Text="{Binding Title}"/>
                        </Grid>
                    </DataTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--Button-->

        <Style TargetType="Button" x:Key="button">
            <Setter Property="Background" Value="#00000000"></Setter>
            <Setter Property="BorderBrush" Value="#00000000"></Setter>
            <Setter Property="Foreground" Value="#ffffffff"></Setter>
        </Style>
        <Style TargetType="Button" x:Key="button-square" BasedOn="{StaticResource button}">
            <Setter Property="Height" Value="48"></Setter>
            <Setter Property="Width" Value="48"></Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}" BorderBrush="{x:Null}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#9900A2DE"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="Button" x:Key="button-normal">
            <Setter Property="Background" Value="#00000000"></Setter>
            <Setter Property="Foreground" Value="#ffcccccc"></Setter>
            <Setter Property="MinHeight" Value="24"></Setter>
            <Setter Property="MinWidth" Value="48"></Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}" BorderBrush="#ffcccccc" BorderThickness="2,2,2,2">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#ffcccccc"/>
                    <Setter Property="Foreground" Value="#ff000000"></Setter>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="ToggleButton" x:Key="toggle-button">
            <Setter Property="Background" Value="#00000000"></Setter>
            <Setter Property="BorderBrush" Value="#00000000"></Setter>
            <Setter Property="Foreground" Value="#ffffffff"></Setter>
        </Style>
        <Style TargetType="ToggleButton" x:Key="toggle-button-square" BasedOn="{StaticResource toggle-button}">
            <Setter Property="Height" Value="48"></Setter>
            <Setter Property="Width" Value="48"></Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border Background="{TemplateBinding Background}" BorderBrush="#ffcccccc" BorderThickness="0,0,0,0">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#9900A2DE"/>
                </Trigger>
                <Trigger Property="IsChecked" Value="True">
                    <Setter Property="Background" Value="#ff888888"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="ToggleButton" x:Key="toggle-button-todolist" BasedOn="{StaticResource toggle-button}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Foreground" Value="#9900A2DE"/>
                </Trigger>
                <!--<MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding ElementName=tabTodolist, Path=IsSelected}" Value="true"></Condition>
                        <Condition Binding="{Binding ElementName=btnEdit, Path=IsChecked}" Value="false"></Condition>
                        <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsChecked}" Value="true"></Condition>
                    </MultiDataTrigger.Conditions>
                    <MultiDataTrigger.Setters>
                        <Setter Property="Foreground" Value="#ff888888"/>
                    </MultiDataTrigger.Setters>
                </MultiDataTrigger>-->
            </Style.Triggers>
        </Style>
        <Style TargetType="ToggleButton" x:Key="toggle-button-weeky" BasedOn="{StaticResource toggle-button}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Foreground" Value="#9900A2DE"/>
                </Trigger>
                <!--<MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding ElementName=tabWeekylist, Path=IsSelected}" Value="true"></Condition>
                        <Condition Binding="{Binding ElementName=btnEdit, Path=IsChecked}" Value="false"></Condition>
                        <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsChecked}" Value="true"></Condition>
                    </MultiDataTrigger.Conditions>
                    <MultiDataTrigger.Setters>
                        <Setter Property="Foreground" Value="#9900A2DE"/>
                    </MultiDataTrigger.Setters>
                </MultiDataTrigger>-->
            </Style.Triggers>
        </Style>
        <Style TargetType="Image" x:Key="button-icon">
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
        </Style>

        <!--Tab-->

        <Style TargetType="TabControl">
            <Setter Property="Background" Value="#00000000"></Setter>
            <Setter Property="BorderBrush" Value="#00000000"></Setter>
            <Setter Property="BorderThickness" Value="0,0,0,0"></Setter>
            <Setter Property="Foreground" Value="#ffffffff"></Setter>
        </Style>
        <Style TargetType="TabItem">
            <Setter Property="Background" Value="#00000000"></Setter>
            <Setter Property="FontSize" Value="16"></Setter>
            <Setter Property="Foreground" Value="#ffffffff"></Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TabItem">
                        <Grid Name="Panel" Width="Auto" Height="48" Background="{TemplateBinding Background}" HorizontalAlignment="Left" MinWidth="46" Margin="0">
                            <Border Name="Border1" BorderBrush="#9900A2DE" Padding="5,0">
                                <ContentPresenter x:Name="ContentSite"
                                        VerticalAlignment="Center"
                                        HorizontalAlignment="Center"
                                        ContentSource="Header"/>
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#5500A2DE"/>
                            </Trigger>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="Foreground" Value="#ff33c2fE"></Setter>
                                <Setter TargetName="Border1" Property="BorderThickness" Value="0,0,0,4" />
                            </Trigger>
                            <Trigger Property="IsSelected" Value="False">
                                <!--<Setter TargetName="ContentSite" Property="Foreground" Value="#ffffffff" />-->
                                <Setter Property="Foreground" Value="#ffffffff"></Setter>
                                <Setter TargetName="Border1" Property="BorderThickness" Value="0,0,0,0" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--TreeView-->

        <!--<Style TargetType="TreeView" x:Key="todoListStyle">
            <Setter Property="Background" Value="#00000000"></Setter>
            <Setter Property="BorderBrush" Value="#00000000"></Setter>
            <Setter Property="BorderThickness" Value="0,0,0,0"></Setter>
            <Setter Property="Foreground" Value="#ffffffff"></Setter>
            <Setter Property="HorizontalContentAlignment" Value="Stretch"></Setter>
            <Setter Property="ItemTemplate">
                <Setter.Value>
                    <HierarchicalDataTemplate DataType="{x:Type bo:TodoWork}" ItemsSource="{Binding Path=Items}">
                        <Grid Height="24" HorizontalAlignment="Stretch">
                            <ToggleButton Content="{Binding Path=Title}"
                                    VerticalAlignment="Center" 
                                    HorizontalAlignment="Stretch" FontSize="16"
                                    Style="{StaticResource toggle-button-todolist}"
                                          Click="tvTodolist_Item_Selected">
                            </ToggleButton>
                            --><!--<TextBlock Text="{Binding Path=Title}"></TextBlock>--><!--
                        </Grid>
                    </HierarchicalDataTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="TreeView" x:Key="weekyListStyle">
            <Setter Property="Background" Value="#00000000"></Setter>
            <Setter Property="BorderBrush" Value="#00000000"></Setter>
            <Setter Property="BorderThickness" Value="0,0,0,0"></Setter>
            <Setter Property="Foreground" Value="#ffffffff"></Setter>
            <Setter Property="HorizontalContentAlignment" Value="Stretch"></Setter>
            <Setter Property="ItemTemplate">
                <Setter.Value>
                    <HierarchicalDataTemplate DataType="{x:Type bo:Task}" ItemsSource="{Binding Path=Items}">
                        <Grid Height="24" HorizontalAlignment="Stretch">
                            <ToggleButton Content="{Binding Path=Title}" 
                                            VerticalAlignment="Center" 
                                            HorizontalAlignment="Stretch" Cursor="Hand" FontSize="16"
                                            Style="{StaticResource toggle-button-weeky}" 
                                          Click="tvTodolist_Item_Selected">
                            </ToggleButton>
                            --><!--<TextBlock Text="{Binding Path=Title}"></TextBlock>--><!--
                        </Grid>
                    </HierarchicalDataTemplate>
                </Setter.Value>
            </Setter>
        </Style>-->
        <Style TargetType="TreeViewItem">
            <Setter Property="Background" Value="#00000000"></Setter>
            <Setter Property="BorderBrush" Value="#00000000"></Setter>
            <Setter Property="BorderThickness" Value="0,0,0,0"></Setter>
            <!--<Setter Property="Foreground" Value="#ffffffff"></Setter>-->
            <Setter Property="HorizontalContentAlignment" Value="Stretch"></Setter>
            <Setter Property="HorizontalAlignment" Value="Stretch"></Setter>
            <Setter Property="IsExpanded" Value="True"></Setter>
        </Style>
        
        <!--Form-->
        <Style TargetType="{x:Type Label}">
            <Setter Property="Foreground" Value="#ffffffff"></Setter>
            <Setter Property="HorizontalContentAlignment" Value="Left"></Setter>
            <Setter Property="VerticalContentAlignment" Value="Center"></Setter>
        </Style>
        <Style TargetType="{x:Type TextBox}">
            <Setter Property="MinHeight" Value="24"></Setter>
            <Setter Property="MaxHeight" Value="96"></Setter>
            <Setter Property="Background" Value="#ff333333"></Setter>
            <Setter Property="BorderBrush" Value="#ff00A2DE"></Setter>
            <Setter Property="BorderThickness" Value="0,0,5,0"></Setter>
            <Setter Property="Foreground" Value="#ffffffff"></Setter>
            <Setter Property="HorizontalContentAlignment" Value="Left"></Setter>
            <Setter Property="VerticalContentAlignment" Value="Center"></Setter>
            <Setter Property="Margin" Value="5,5,5,5"></Setter>
        </Style>
    </Application.Resources>
</Application>
